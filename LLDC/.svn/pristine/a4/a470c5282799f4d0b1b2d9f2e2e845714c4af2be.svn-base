package co.uk.android.lldc.fragments;

import java.util.ArrayList;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import co.uk.android.lldc.EventDetailsActivity;
import co.uk.android.lldc.LLDCApplication;
import co.uk.android.lldc.R;
import co.uk.android.lldc.adapters.EventHighLightPagerAdapter;
import co.uk.android.lldc.adapters.EventListAdapter;
import co.uk.android.lldc.adapters.VenueEventListAdapter;
import co.uk.android.lldc.models.ServerModel;

public class EventsFragment extends RootFragment {

	ViewPager viewPager;
	Context context;
	ListView events_list;

	EventListAdapter listAdapter = null;
	VenueEventListAdapter venuelistAdapter = null;
	EventHighLightPagerAdapter highlightListAdapter = null;

	ArrayList<ServerModel> eventList = new ArrayList<ServerModel>();
	RelativeLayout highLiteList;

	View headerView;

	ProgressBar highliteprogress;

	public EventsFragment() {
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View rootView = inflater.inflate(R.layout.fragment_events, container,
				false);
		super.initWidgets(rootView, this.getClass().getName());
		viewPager = (ViewPager) rootView.findViewById(R.id.view_pager);
		events_list = (ListView) rootView.findViewById(R.id.events_list);
		highLiteList = (RelativeLayout) rootView
				.findViewById(R.id.highLiteList);

		highliteprogress = (ProgressBar) rootView
				.findViewById(R.id.highliteprogress);

		headerView = (View) rootView.findViewById(R.id.viewHeader);

		events_list.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(getActivity(),
						EventDetailsActivity.class);
				intent.putExtra("EVENTID", eventList.get(arg2).get_id());
				getActivity().startActivity(intent);
			}
		});

		viewPager.setOnPageChangeListener(new OnPageChangeListener() {

			@Override
			public void onPageSelected(int position) {
				// TODO Auto-generated method stub
				int temp = viewPager.getCurrentItem();
				temp = (temp + 1) * 10;
				highliteprogress.setProgress(temp);
			}

			@Override
			public void onPageScrolled(int position, float positionOffset,
					int positionOffsetPixels) {
				// TODO Auto-generated method stub

			}

			@Override
			public void onPageScrollStateChanged(int position) {
				// TODO Auto-generated method stub

			}
		});

		getDataFromDB();

		return rootView;

	}

	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
	}

	public void getDataFromDB() {
		try {
			eventList.clear();
			if ((getActivity().getClass().getName().toString()
					.contains("TodaysEventActivity"))) {
				eventList = LLDCApplication.DBHelper.getTodaysEventData();
			} else if ((getActivity().getClass().getName().toString()
					.contains("VenueActivity"))) {
				headerView.setVisibility(View.GONE);
				eventList = LLDCApplication.DBHelper.getEventData("");
			} else {
				eventList = LLDCApplication.DBHelper.getEventData("");
			}

			if ((getActivity().getClass().getName().toString()
					.contains("VenueActivity"))) {
				venuelistAdapter = new VenueEventListAdapter(getActivity(),
						eventList);
				events_list.setAdapter(venuelistAdapter);
			} else {
				listAdapter = new EventListAdapter(getActivity(), eventList);
				events_list.setAdapter(listAdapter);
			}

			ArrayList<ServerModel> tempList = new ArrayList<ServerModel>();

			if (!(getActivity().getClass().getName().toString()
					.contains("TodaysEventActivity"))) {
				for (int i = 0; i < eventList.size(); i++) {
					if (eventList.get(i).getFlag().toString().trim()
							.equals(LLDCApplication.FLAG_HIGHLIGHT)) {
						tempList.add(eventList.get(i));
					}
				}
			}

			if (tempList.size() > 0) {
				int temp = tempList.size() * 10;
				highliteprogress.setMax(temp);
				highlightListAdapter = new EventHighLightPagerAdapter(
						getActivity(), tempList, viewPager);
				viewPager.setAdapter(highlightListAdapter);
				highlightListAdapter.notifyDataSetChanged();
				highLiteList.setVisibility(View.VISIBLE);
			} else {
				highLiteList.setVisibility(View.GONE);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
